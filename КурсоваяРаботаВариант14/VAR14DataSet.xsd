<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="VAR14DataSet" targetNamespace="http://tempuri.org/VAR14DataSet.xsd" xmlns:mstns="http://tempuri.org/VAR14DataSet.xsd" xmlns="http://tempuri.org/VAR14DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="VAR14ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="VAR14ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.КурсоваяРаботаВариант14.Properties.Settings.GlobalReference.Default.VAR14ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamTableAdapter" GeneratorDataComponentClassName="ExamTableAdapter" Name="Exam" UserDataComponentName="ExamTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.Exam" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exam] ([StudentID], [SubjectID], [Grade], [Semestr]) VALUES (@StudentID, @SubjectID, @Grade, @Semestr)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubjectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubjectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Grade" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Semestr" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Semestr" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, SubjectID, Grade, Semestr FROM dbo.Exam</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="SubjectID" DataSetColumn="SubjectID" />
              <Mapping SourceColumn="Grade" DataSetColumn="Grade" />
              <Mapping SourceColumn="Semestr" DataSetColumn="Semestr" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GradeTableAdapter" GeneratorDataComponentClassName="GradeTableAdapter" Name="Grade" UserDataComponentName="GradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.Grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Grade] WHERE (([GradeAsDigit] = @Original_GradeAsDigit) AND ((@IsNull_GradeAsText = 1 AND [GradeAsText] IS NULL) OR ([GradeAsText] = @Original_GradeAsText)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_GradeAsDigit" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="GradeAsDigit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GradeAsText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GradeAsText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Grade] ([GradeAsDigit], [GradeAsText]) VALUES (@GradeAsDigit, @GradeAsText);
SELECT GradeAsDigit, GradeAsText FROM Grade WHERE (GradeAsDigit = @GradeAsDigit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@GradeAsDigit" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="GradeAsDigit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GradeAsText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GradeAsDigit, GradeAsText FROM dbo.Grade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Grade] SET [GradeAsDigit] = @GradeAsDigit, [GradeAsText] = @GradeAsText WHERE (([GradeAsDigit] = @Original_GradeAsDigit) AND ((@IsNull_GradeAsText = 1 AND [GradeAsText] IS NULL) OR ([GradeAsText] = @Original_GradeAsText)));
SELECT GradeAsDigit, GradeAsText FROM Grade WHERE (GradeAsDigit = @GradeAsDigit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@GradeAsDigit" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="GradeAsDigit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GradeAsText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_GradeAsDigit" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="GradeAsDigit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GradeAsText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GradeAsText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GradeAsText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GradeAsDigit" DataSetColumn="GradeAsDigit" />
              <Mapping SourceColumn="GradeAsText" DataSetColumn="GradeAsText" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTableAdapter" GeneratorDataComponentClassName="GroupTableAdapter" Name="Group" UserDataComponentName="GroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.[Group]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group] WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group] ([Name]) VALUES (@Name);
SELECT ID, Name FROM [Group] WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name FROM dbo.[Group]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group] SET [Name] = @Name WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT ID, Name FROM [Group] WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="VAR14.dbo.[Group]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_GroupID = 1 AND [GroupID] IS NULL) OR ([GroupID] = @Original_GroupID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([Name], [GroupID]) VALUES (@Name, @GroupID);
SELECT ID, Name, GroupID FROM Student WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name, GroupID FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [Name] = @Name, [GroupID] = @GroupID WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_GroupID = 1 AND [GroupID] IS NULL) OR ([GroupID] = @Original_GroupID)));
SELECT ID, Name, GroupID FROM Student WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="VAR14.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubjectTableAdapter" GeneratorDataComponentClassName="SubjectTableAdapter" Name="Subject" UserDataComponentName="SubjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.Subject" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subject] WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subject] ([Name]) VALUES (@Name);
SELECT ID, Name FROM Subject WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name FROM dbo.Subject</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subject] SET [Name] = @Name WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT ID, Name FROM Subject WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="VAR14.dbo.Subject" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamViewTableAdapter" GeneratorDataComponentClassName="ExamViewTableAdapter" Name="ExamView" UserDataComponentName="ExamViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VAR14ConnectionString (Settings)" DbObjectName="VAR14.dbo.ExamView" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentName, StudentID, SubjectName, SubjectID, GradeText, GradeDigit, Semestr FROM dbo.ExamView</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentName" DataSetColumn="StudentName" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="SubjectName" DataSetColumn="SubjectName" />
              <Mapping SourceColumn="SubjectID" DataSetColumn="SubjectID" />
              <Mapping SourceColumn="GradeText" DataSetColumn="GradeText" />
              <Mapping SourceColumn="GradeDigit" DataSetColumn="GradeDigit" />
              <Mapping SourceColumn="Semestr" DataSetColumn="Semestr" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="VAR14DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="VAR14DataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="VAR14DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Exam" msprop:Generator_RowClassName="ExamRow" msprop:Generator_RowEvHandlerName="ExamRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamRowDeleted" msprop:Generator_RowDeletingName="ExamRowDeleting" msprop:Generator_RowEvArgName="ExamRowChangeEvent" msprop:Generator_TablePropName="Exam" msprop:Generator_RowChangedName="ExamRowChanged" msprop:Generator_UserTableName="Exam" msprop:Generator_RowChangingName="ExamRowChanging" msprop:Generator_TableClassName="ExamDataTable" msprop:Generator_TableVarName="tableExam">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" minOccurs="0" />
              <xs:element name="SubjectID" msprop:Generator_UserColumnName="SubjectID" msprop:Generator_ColumnPropNameInTable="SubjectIDColumn" msprop:Generator_ColumnPropNameInRow="SubjectID" msprop:Generator_ColumnVarNameInTable="columnSubjectID" type="xs:int" minOccurs="0" />
              <xs:element name="Grade" msprop:Generator_UserColumnName="Grade" msprop:Generator_ColumnPropNameInTable="GradeColumn" msprop:Generator_ColumnPropNameInRow="Grade" msprop:Generator_ColumnVarNameInTable="columnGrade" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="Semestr" msprop:Generator_UserColumnName="Semestr" msprop:Generator_ColumnPropNameInTable="SemestrColumn" msprop:Generator_ColumnPropNameInRow="Semestr" msprop:Generator_ColumnVarNameInTable="columnSemestr" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Grade" msprop:Generator_RowClassName="GradeRow" msprop:Generator_RowEvHandlerName="GradeRowChangeEventHandler" msprop:Generator_RowDeletedName="GradeRowDeleted" msprop:Generator_RowDeletingName="GradeRowDeleting" msprop:Generator_RowEvArgName="GradeRowChangeEvent" msprop:Generator_TablePropName="Grade" msprop:Generator_RowChangedName="GradeRowChanged" msprop:Generator_UserTableName="Grade" msprop:Generator_RowChangingName="GradeRowChanging" msprop:Generator_TableClassName="GradeDataTable" msprop:Generator_TableVarName="tableGrade">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GradeAsDigit" msprop:Generator_UserColumnName="GradeAsDigit" msprop:Generator_ColumnPropNameInTable="GradeAsDigitColumn" msprop:Generator_ColumnPropNameInRow="GradeAsDigit" msprop:Generator_ColumnVarNameInTable="columnGradeAsDigit" type="xs:unsignedByte" />
              <xs:element name="GradeAsText" msprop:Generator_UserColumnName="GradeAsText" msprop:Generator_ColumnPropNameInTable="GradeAsTextColumn" msprop:Generator_ColumnPropNameInRow="GradeAsText" msprop:Generator_ColumnVarNameInTable="columnGradeAsText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Group" msprop:Generator_RowClassName="GroupRow" msprop:Generator_RowEvHandlerName="GroupRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupRowDeleted" msprop:Generator_RowDeletingName="GroupRowDeleting" msprop:Generator_RowEvArgName="GroupRowChangeEvent" msprop:Generator_TablePropName="Group" msprop:Generator_RowChangedName="GroupRowChanged" msprop:Generator_UserTableName="Group" msprop:Generator_RowChangingName="GroupRowChanging" msprop:Generator_TableClassName="GroupDataTable" msprop:Generator_TableVarName="tableGroup">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowClassName="StudentRow" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupID" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subject" msprop:Generator_RowClassName="SubjectRow" msprop:Generator_RowEvHandlerName="SubjectRowChangeEventHandler" msprop:Generator_RowDeletedName="SubjectRowDeleted" msprop:Generator_RowDeletingName="SubjectRowDeleting" msprop:Generator_RowEvArgName="SubjectRowChangeEvent" msprop:Generator_TablePropName="Subject" msprop:Generator_RowChangedName="SubjectRowChanged" msprop:Generator_UserTableName="Subject" msprop:Generator_RowChangingName="SubjectRowChanging" msprop:Generator_TableClassName="SubjectDataTable" msprop:Generator_TableVarName="tableSubject">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExamView" msprop:Generator_RowClassName="ExamViewRow" msprop:Generator_RowEvHandlerName="ExamViewRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamViewRowDeleted" msprop:Generator_RowDeletingName="ExamViewRowDeleting" msprop:Generator_RowEvArgName="ExamViewRowChangeEvent" msprop:Generator_TablePropName="ExamView" msprop:Generator_RowChangedName="ExamViewRowChanged" msprop:Generator_UserTableName="ExamView" msprop:Generator_RowChangingName="ExamViewRowChanging" msprop:Generator_TableClassName="ExamViewDataTable" msprop:Generator_TableVarName="tableExamView">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentName" msprop:Generator_UserColumnName="StudentName" msprop:Generator_ColumnPropNameInTable="StudentNameColumn" msprop:Generator_ColumnPropNameInRow="StudentName" msprop:Generator_ColumnVarNameInTable="columnStudentName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="SubjectName" msprop:Generator_UserColumnName="SubjectName" msprop:Generator_ColumnPropNameInTable="SubjectNameColumn" msprop:Generator_ColumnPropNameInRow="SubjectName" msprop:Generator_ColumnVarNameInTable="columnSubjectName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SubjectID" msprop:Generator_UserColumnName="SubjectID" msprop:Generator_ColumnPropNameInTable="SubjectIDColumn" msprop:Generator_ColumnPropNameInRow="SubjectID" msprop:Generator_ColumnVarNameInTable="columnSubjectID" type="xs:int" />
              <xs:element name="GradeText" msprop:Generator_UserColumnName="GradeText" msprop:Generator_ColumnPropNameInTable="GradeTextColumn" msprop:Generator_ColumnPropNameInRow="GradeText" msprop:Generator_ColumnVarNameInTable="columnGradeText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GradeDigit" msprop:Generator_UserColumnName="GradeDigit" msprop:Generator_ColumnPropNameInTable="GradeDigitColumn" msprop:Generator_ColumnPropNameInRow="GradeDigit" msprop:Generator_ColumnVarNameInTable="columnGradeDigit" type="xs:unsignedByte" />
              <xs:element name="Semestr" msprop:Generator_UserColumnName="Semestr" msprop:Generator_ColumnPropNameInTable="SemestrColumn" msprop:Generator_ColumnPropNameInRow="Semestr" msprop:Generator_ColumnVarNameInTable="columnSemestr" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Grade" />
      <xs:field xpath="mstns:GradeAsDigit" />
    </xs:unique>
    <xs:unique name="Group_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Subject_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subject" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="ExamView_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExamView" />
      <xs:field xpath="mstns:StudentID" />
      <xs:field xpath="mstns:SubjectID" />
      <xs:field xpath="mstns:GradeDigit" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Exam_Grade" msdata:parent="Grade" msdata:child="Exam" msdata:parentkey="GradeAsDigit" msdata:childkey="Grade" msprop:Generator_UserParentTable="Grade" msprop:Generator_UserChildTable="Exam" msprop:Generator_RelationVarName="relationFK_Exam_Grade" msprop:Generator_ChildPropName="GetExamRows" msprop:Generator_ParentPropName="GradeRow" msprop:Generator_UserRelationName="FK_Exam_Grade" />
      <msdata:Relationship name="FK_Exam_Student1" msdata:parent="Student" msdata:child="Exam" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Exam" msprop:Generator_RelationVarName="relationFK_Exam_Student1" msprop:Generator_ChildPropName="GetExamRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_Exam_Student1" />
      <msdata:Relationship name="FK_Exam_Subject1" msdata:parent="Subject" msdata:child="Exam" msdata:parentkey="ID" msdata:childkey="SubjectID" msprop:Generator_UserParentTable="Subject" msprop:Generator_UserChildTable="Exam" msprop:Generator_RelationVarName="relationFK_Exam_Subject1" msprop:Generator_ChildPropName="GetExamRows" msprop:Generator_ParentPropName="SubjectRow" msprop:Generator_UserRelationName="FK_Exam_Subject1" />
      <msdata:Relationship name="FK_Student_Group1" msdata:parent="Group" msdata:child="Student" msdata:parentkey="ID" msdata:childkey="GroupID" msprop:Generator_UserParentTable="Group" msprop:Generator_UserChildTable="Student" msprop:Generator_RelationVarName="relationFK_Student_Group1" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_UserRelationName="FK_Student_Group1" msprop:Generator_ParentPropName="GroupRow" />
      <msdata:Relationship name="Student_ExamView" msdata:parent="Student" msdata:child="ExamView" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="ExamView" msprop:Generator_RelationVarName="relationStudent_ExamView" msprop:Generator_ChildPropName="GetExamViewRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="Student_ExamView" />
      <msdata:Relationship name="Subject_ExamView" msdata:parent="Subject" msdata:child="ExamView" msdata:parentkey="ID" msdata:childkey="SubjectID" msprop:Generator_UserParentTable="Subject" msprop:Generator_UserChildTable="ExamView" msprop:Generator_RelationVarName="relationSubject_ExamView" msprop:Generator_ChildPropName="GetExamViewRows" msprop:Generator_ParentPropName="SubjectRow" msprop:Generator_UserRelationName="Subject_ExamView" />
      <msdata:Relationship name="Grade_ExamView" msdata:parent="Grade" msdata:child="ExamView" msdata:parentkey="GradeAsDigit" msdata:childkey="GradeDigit" msprop:Generator_UserParentTable="Grade" msprop:Generator_UserChildTable="ExamView" msprop:Generator_RelationVarName="relationGrade_ExamView" msprop:Generator_ChildPropName="GetExamViewRows" msprop:Generator_ParentPropName="GradeRow" msprop:Generator_UserRelationName="Grade_ExamView" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>